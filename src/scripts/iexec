#!/bin/sh

# Copyrights     : iExec
# Author         : Oleg Lodygensky
# Web            : http://iex.ec
#
#      This file is part of iExec-sdk.
#
#    iExec-sdk is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    iExec-sdk is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with XtremWeb-HEP.  If not, see <http://www.gnu.org/licenses/>.
#
#

#
#
# File : iexec
#
# Purpose : This is the off-chain computing client
#
#

#=====================================================
# usage ()
#=====================================================
usage()
{
cat  << END_OF_IEXEC_USAGE  > /dev/stderr
  This is the iExec command line client.
  This is free software, provided 'as is', WITHOUT ANY WARRANTY.
  See the GNU General Public License for more details.

  Usage:
      $0 [ -h | --help | init | compile | deploy | test | \
sendadpp | submit |Â status | result | download | delete | rm ]
  Parameters :
      -h | --help : this help
      init :
      compile :
      deploy :
      test :
      sendapp :
      submit :
      status :
      result :
      download :
      delete | rm :
END_OF_IEXEC_USAGE
  exit 0
}

#=====================================================
#  fatal (message)
#=====================================================
fatal ()
{
  msg="$1"
  [ "$msg" ]  ||  msg="Ctrl+C"

  echo  "$(date "$DATE_FORMAT")  $SCRIPTNAME  FATAL : $msg"

  exit 1
}


#=====================================================
# main
#=====================================================

############################################
# some variables
############################################
progdir=`dirname $0`
progname=`basename $0`

PROG="iexec"

currentDir=`pwd`
cd $progdir/..
ROOTDIR=`pwd`
cd $currentDir

COMMAND=$1
shift
COMMANDS=$1
shift

[ -z "$COMMAND" -o -z "$COMMANDS" ] && usage

THISOS=`uname -s`

case "$THISOS" in

  Darwin )
    DATE_FORMAT='+%Y-%m-%d %H:%M:%S%z'
    ;;

  Linux )
    DATE_FORMAT='--rfc-3339=seconds'
    ;;

  * )
    fatal  "OS not supported ($THISOS)"
    ;;

esac


PRG=$0
trap  fatal  SIGINT  SIGTERM

############################################
# reach "real" file through symbolic links, if any
############################################

while [ -h "$PRG" ]; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '^.*-> \(.*\)$' 2>/dev/null`
    if expr "$link" : '^/' 2> /dev/null >/dev/null; then
        PRG="$link"
    else
        PRG="`dirname $PRG`/$link"
    fi
done

############################################
# test off-chain computing client
############################################
type xwsubmit > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  fatal "can't find the off-chain client"
fi

############################################
# check command line parameters
############################################

case $1 in
  "-h" | "--help" )
    usage
    ;;
  "init" )
    echo "init not implemented"
    ;;
  "compile" )
    echo "compile not implemented"
    ;;
  "deploy" )
    echo "deploy not implemented"
    ;;
  "test" )
    echo "test not implemented"
    ;;
  "sendapp" )
    xwsendapp $*
    ;;
  "submit" )
    echo "submit not implemented"
    ;;
  "status" )
    echo "status not implemented"
    ;;
  "result" )
    echo "result not implemented"
    ;;
  "download" )
    echo "download not implemented"
    ;;
  "delete" || "rm" )
    echo "delete not implemented"
    ;;
  * )
    usage
    ;;
esac

#
# End of file
#
